{"version":3,"sources":["context/AuthReducer.js","context/AuthContext.js","components/topbar/Topbar.jsx","dummyData.js","components/closeFriend/CloseFriend.jsx","components/sidebar/Sidebar.jsx","components/post/Post.jsx","components/share/Share.jsx","components/feed/Feed.jsx","components/online/Online.jsx","components/rightbar/Rightbar.jsx","pages/home/Home.jsx","apiCalls.js","pages/login/Login.jsx","pages/profile/Profile.jsx","pages/register/Register.jsx","components/conversations/Conversation.jsx","components/message/Message.jsx","components/chatOnline/ChatOnline.jsx","pages/messenger/Messenger.jsx","App.js","index.js"],"names":["AuthReducer","state","action","type","user","isFetching","error","payload","followings","filter","following","INITIAL_STATE","JSON","parse","localStorage","getItem","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","Topbar","useContext","PF","process","className","to","style","textDecoration","Search","placeholder","Person","Chat","Notifications","username","src","profilePicture","alt","Users","id","CloseFriend","Sidebar","RssFeed","PlayCircleFilledOutlined","Group","Bookmark","HelpOutline","WorkOutline","Event","School","map","u","Post","post","useState","likes","length","like","setLike","isLiked","setIsLiked","setUser","currentUser","includes","_id","a","axios","get","userId","res","data","fetchUser","likeHandler","put","err","format","createdAt","MoreVert","desc","img","onClick","comment","Share","useRef","file","setFile","submitHandler","e","preventDefault","newPost","current","FormData","fileName","Date","now","name","append","console","log","window","location","reload","ref","URL","createObjectURL","Cancel","onSubmit","htmlFor","PermMedia","htmlColor","display","accept","onChange","target","files","Label","Room","EmojiEmotions","Feed","posts","setPosts","sort","p1","p2","fetchPosts","p","Online","Rightbar","friends","setFriends","followed","setFollowed","friendList","getFriends","handleClick","HomeRightbar","ProfileRightbar","Remove","Add","city","from","relationship","friend","Home","loginCall","userCredential","undefined","email","alert","Login","password","history","useHistory","push","required","minLength","disabled","CircularProgress","color","size","margin","Profile","useParams","coverPicture","Register","passwordAgain","setCustomValidity","Conversation","conversation","convSearch","friendId","members","find","m","getUser","status","Message","message","own","text","ChatOnline","userInfor","userDetail","setUserDetail","getuser","Messenger","socketId","socketHost","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","scrollRef","chatUsers","setChatUsers","arrivalMessage","setArrivalMessage","arrivalConversation","setArrivalConversation","searchCon","setSearchCon","socket","io","on","sender","senderId","sortCoversation","new_conv_a","new_conv2","new_conv3","i","prev","new_conv","mem","emit","users","getConversations","getMessages","handleSubmit","conversationId","receiverId","member","handleSeeCoversation","c","index","findIndex","val","sort_conv","handleCreateCoversation","receiver","scrollIntoView","behavior","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfe2e4ba.chunk.js","sourcesContent":["// xử lý  các case dựa vào action.type \nconst AuthReducer = (state, action) => {\n  // các action được dispatch lên từ các chức năng: login , login success,......\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false,\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true,\n      };\n    case \"FOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          followings: [...state.user.followings, action.payload],\n        },\n      };\n    case \"UNFOLLOW\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          followings: state.user.followings.filter(\n            (following) => following !== action.payload\n          ),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;\n","import { createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\nconst INITIAL_STATE = {   // khởi tạo dữ liêuj global state thông qua local storage \n  user:JSON.parse(localStorage.getItem(\"user\")) || null,\n  isFetching: false,\n  error: false,\n};\n\n// tạo ra context chứa dữ liệu \n// mỗi khi user gọi đến useContext thì lệnh khởi tạo INITIAL_STATE được gọi lại. \nexport const AuthContext = createContext(INITIAL_STATE);\n\n//Dùng để khởi tạo cấu trúc reducer \n// state ở đây là global state trong redux \n// children là element con ; children con (App) phải sử dụng dữ liệu chung của authcontex. provider \nexport const AuthContextProvider = ({ children }) => {\n  // dispatch thằng state đến authReducer ( AuReducer có state khởi tạo là initState )\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\n  \n  // dữ liệu của user lấy từ local storage \n  useEffect(()=>{\n    // Khai báo để đẩy dữ liệu authentication của user lên localStorage \n    // state là action được dispath lên \n    localStorage.setItem(\"user\", JSON.stringify(state.user))\n  },[state.user])\n  \n  // kiến thức về react useContext;\n  return (\n    /*Config dữ liệu trong redux*/\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import \"./topbar.css\";\nimport { Search, Person, Chat, Notifications } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Topbar() {\n  // lấy thông tin đăng nhập từ con text \n  const { user } = useContext(AuthContext);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;  // đường dẫn truy cập hình ảnh \n  return (\n    <div className=\"topbarContainer\">\n      <div className=\"topbarLeft\">\n        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n          <span className=\"logo\">Message</span>\n        </Link>\n      </div>\n      <div className=\"topbarCenter\">\n        <div className=\"searchbar\">\n          <Search className=\"searchIcon\" />\n          <input\n            placeholder=\"Search for friend, post or video\"\n            className=\"searchInput\"\n          />\n        </div>\n      </div>\n      <div className=\"topbarRight\">\n        <div className=\"topbarLinks\">\n          <span className=\"topbarLink\">Homepage</span>\n          <span className=\"topbarLink\">Timeline</span>\n        </div>\n        <div className=\"topbarIcons\">\n          <div className=\"topbarIconItem\">\n            <Person />\n            <span className=\"topbarIconBadge\">1</span>\n          </div>\n          <div className=\"topbarIconItem\">\n            <Chat />\n            <span className=\"topbarIconBadge\">2</span>\n          </div>\n          <div className=\"topbarIconItem\">\n            <Notifications />\n            <span className=\"topbarIconBadge\">1</span>\n          </div>\n        </div>\n        {/*Đường link truy cập lên DB để lấy thông tin điền vào profile*/}\n        <Link to={`/profile/${user.username}`}>\n          <img\n            src={\n              user.profilePicture\n                ? PF + user.profilePicture\n                : PF + \"person/noAvatar.png\"\n            }\n            alt=\"\"\n            className=\"topbarImg\"\n          />\n        </Link>\n      </div>\n    </div>\n  );\n}\n","export const Users = [\n  {\n    id:1,\n    profilePicture: \"person/1.jpeg\",\n    username: \"Safak Kocaoglu\",\n  },\n  {\n    id:2,\n    profilePicture: \"person/2.jpeg\",\n    username: \"Janell Shrum\",\n  },\n  {\n    id:3,\n    profilePicture: \"person/3.jpeg\",\n    username: \"Alex Durden\",\n  },\n  {\n    id:4,\n    profilePicture: \"person/4.jpeg\",\n    username: \"Dora Hawks\",\n  },\n  {\n    id:5,\n    profilePicture: \"person/5.jpeg\",\n    username: \"Thomas Holden\",\n  },\n  {\n    id:6,\n    profilePicture: \"person/6.jpeg\",\n    username: \"Shirley Beauchamp\",\n  },\n  {\n    id:7,\n    profilePicture: \"person/7.jpeg\",\n    username: \"Travis Bennett\",\n  },\n  {\n    id:8,\n    profilePicture: \"person/8.jpeg\",\n    username: \"Kristen Thomas\",\n  },\n  {\n    id:9,\n    profilePicture: \"person/9.jpeg\",\n    username: \"Gary Duty\",\n  },\n  {\n    id:10,\n    profilePicture: \"person/10.jpeg\",\n    username: \"Safak Kocaoglu\",\n  },\n];\n\nexport const Posts = [\n  {\n    id: 1,\n    desc: \"Love For All, Hatred For None.\",\n    photo: \"post/1.jpeg\",\n    date: \"5 mins ago\",\n    userId: 1,\n    like: 32,\n    comment: 9,\n  },\n  {\n    id: 2,\n    photo: \"post/2.jpeg\",\n    date: \"15 mins ago\",\n    userId: 2,\n    like: 2,\n    comment: 1,\n  },\n  {\n    id: 3,\n    desc: \"Every moment is a fresh beginning.\",\n    photo: \"post/3.jpeg\",\n    date: \"1 hour ago\",\n    userId: 3,\n    like: 61,\n    comment: 2,\n  },\n  {\n    id: 4,\n    photo: \"post/4.jpeg\",\n    date: \"4 hours ago\",\n    userId: 4,\n    like: 7,\n    comment: 3,\n  },\n  {\n    id: 5,\n    photo: \"post/5.jpeg\",\n    date: \"5 hours ago\",\n    userId: 5,\n    like: 23,\n    comment: 5,\n  },\n  {\n    id: 6,\n    photo: \"post/6.jpeg\",\n    date: \"1 day ago\",\n    userId: 6,\n    like: 44,\n    comment: 6,\n  },\n  {\n    id: 7,\n    desc: \"Never regret anything that made you smile.\",\n    photo: \"post/7.jpeg\",\n    date: \"2 days ago\",\n    userId: 7,\n    like: 52,\n    comment: 3,\n  },\n  {\n    id: 8,\n    photo: \"post/8.jpeg\",\n    date: \"3 days ago\",\n    userId: 8,\n    like: 15,\n    comment: 1,\n  },\n  {\n    id: 9,\n    desc: \"Change the world by being yourself.\",\n    photo: \"post/9.jpeg\",\n    date: \"5 days ago\",\n    userId: 9,\n    like: 11,\n    comment: 2,\n  },\n  {\n    id: 10,\n    photo: \"post/10.jpeg\",\n    date: \"1 week ago\",\n    userId: 10,\n    like: 104,\n    comment: 12,\n  },\n];\n","import \"./closeFriend.css\";\n\nexport default function CloseFriend({user}) {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  return (\n    <li className=\"sidebarFriend\">\n      <img className=\"sidebarFriendImg\" src={PF+user.profilePicture} alt=\"\" />\n      <span className=\"sidebarFriendName\">{user.username}</span>\n    </li>\n  );\n}\n","import \"./sidebar.css\";\nimport {\n  RssFeed,\n  Chat,\n  PlayCircleFilledOutlined,\n  Group,\n  Bookmark,\n  HelpOutline,\n  WorkOutline,\n  Event,\n  School,\n} from \"@material-ui/icons\";\nimport { Users } from \"../../dummyData\";\nimport CloseFriend from \"../closeFriend/CloseFriend\";\n\nexport default function Sidebar() {\n  // mới có UI \n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebarWrapper\">\n        <ul className=\"sidebarList\">\n          <li className=\"sidebarListItem\">\n            <RssFeed className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Feed</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Chat className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Chats</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <PlayCircleFilledOutlined className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Videos</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Group className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Groups</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Bookmark className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Bookmarks</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <HelpOutline className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Questions</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <WorkOutline className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Jobs</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <Event className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Events</span>\n          </li>\n          <li className=\"sidebarListItem\">\n            <School className=\"sidebarIcon\" />\n            <span className=\"sidebarListItemText\">Courses</span>\n          </li>\n        </ul>\n        <button className=\"sidebarButton\">Show More</button>\n        <hr className=\"sidebarHr\" />\n        <ul className=\"sidebarFriendList\">\n          {Users.map((u) => (\n            <CloseFriend key={u.id} user={u} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import \"./post.css\";\nimport { MoreVert } from \"@material-ui/icons\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { format } from \"timeago.js\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Post({ post }) {\n  const [like, setLike] = useState(post.likes.length);\n  const [isLiked, setIsLiked] = useState(false);\n  const [user, setUser] = useState({});\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const { user: currentUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    setIsLiked(post.likes.includes(currentUser._id));\n  }, [currentUser._id, post.likes]);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get(`/users?userId=${post.userId}`);\n      setUser(res.data);\n    };\n    fetchUser();\n  }, [post.userId]);\n\n  const likeHandler = () => {\n    try {\n      axios.put(\"/posts/\" + post._id + \"/like\", { userId: currentUser._id });\n    } catch (err) {}\n    setLike(isLiked ? like - 1 : like + 1);\n    setIsLiked(!isLiked);\n  };\n  return (\n    <div className=\"post\">\n      <div className=\"postWrapper\">\n        <div className=\"postTop\">\n          <div className=\"postTopLeft\">\n            <Link to={`/profile/${user.username}`}>\n              <img\n                className=\"postProfileImg\"\n                src={\n                  user.profilePicture\n                    ? PF + user.profilePicture\n                    : PF + \"person/noAvatar.png\"\n                }\n                alt=\"\"\n              />\n            </Link>\n            <span className=\"postUsername\">{user.username}</span>\n            <span className=\"postDate\">{format(post.createdAt)}</span>\n          </div>\n          <div className=\"postTopRight\">\n            <MoreVert />\n          </div>\n        </div>\n        <div className=\"postCenter\">\n          <span className=\"postText\">{post?.desc}</span>\n          <img className=\"postImg\" src={PF + post.img} alt=\"\" />\n        </div>\n        <div className=\"postBottom\">\n          <div className=\"postBottomLeft\">\n            <img\n              className=\"likeIcon\"\n              src={`${PF}like.png`}\n              onClick={likeHandler}\n              alt=\"\"\n            />\n            <img\n              className=\"likeIcon\"\n              src={`${PF}heart.png`}\n              onClick={likeHandler}\n              alt=\"\"\n            />\n            <span className=\"postLikeCounter\">{like} people like it</span>\n          </div>\n          <div className=\"postBottomRight\">\n            <span className=\"postCommentText\">{post.comment} comments</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./share.css\";\nimport {\n  PermMedia,\n  Label,\n  Room,\n  EmojiEmotions,\n  Cancel,\n} from \"@material-ui/icons\";\nimport { useContext, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\n\nexport default function Share() {\n  const { user } = useContext(AuthContext);\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const desc = useRef();\n  const [file, setFile] = useState(null);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    const newPost = {\n      userId: user._id,\n      desc: desc.current.value,\n    };\n    if (file) {\n      const data = new FormData();\n      const fileName = Date.now() + file.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", file);\n      newPost.img = fileName;\n      console.log(newPost);\n      try {\n        await axios.post(\"/upload\", data);\n      } catch (err) {}\n    }\n    try {\n      await axios.post(\"/posts\", newPost);\n      window.location.reload();\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"share\">\n      <div className=\"shareWrapper\">\n        <div className=\"shareTop\">\n          <img\n            className=\"shareProfileImg\"\n            src={\n              user.profilePicture\n                ? PF + user.profilePicture\n                : PF + \"person/noAvatar.png\"\n            }\n            alt=\"\"\n          />\n          <input\n            placeholder={\"What's in your mind \" + user.username + \"?\"}\n            className=\"shareInput\"\n            ref={desc}\n          />\n        </div>\n        <hr className=\"shareHr\" />\n        {file && (\n          <div className=\"shareImgContainer\">\n            <img className=\"shareImg\" src={URL.createObjectURL(file)} alt=\"\" />\n            <Cancel className=\"shareCancelImg\" onClick={() => setFile(null)} />\n          </div>\n        )}\n        <form className=\"shareBottom\" onSubmit={submitHandler}>\n          <div className=\"shareOptions\">\n            <label htmlFor=\"file\" className=\"shareOption\">\n              <PermMedia htmlColor=\"tomato\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Photo or Video</span>\n              <input\n                style={{ display: \"none\" }}\n                type=\"file\"\n                id=\"file\"\n                accept=\".png,.jpeg,.jpg\"\n                onChange={(e) => setFile(e.target.files[0])}\n              />\n            </label>\n            <div className=\"shareOption\">\n              <Label htmlColor=\"blue\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Tag</span>\n            </div>\n            <div className=\"shareOption\">\n              <Room htmlColor=\"green\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Location</span>\n            </div>\n            <div className=\"shareOption\">\n              <EmojiEmotions htmlColor=\"goldenrod\" className=\"shareIcon\" />\n              <span className=\"shareOptionText\">Feelings</span>\n            </div>\n          </div>\n          <button className=\"shareButton\" type=\"submit\">\n            Share\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Feed({ username }) {\n  const [posts, setPosts] = useState([]);\n  const { user } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = username\n        ? await axios.get(\"/posts/profile/\" + username)\n        : await axios.get(\"posts/timeline/\" + user._id);\n      setPosts(\n        res.data.sort((p1, p2) => {\n          return new Date(p2.createdAt) - new Date(p1.createdAt);\n        })\n      );\n    };\n    fetchPosts();\n  }, [username, user._id]);\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feedWrapper\">\n        {(!username || username === user.username) && <Share />}\n        {posts.map((p) => (\n          <Post key={p._id} post={p} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import \"./online.css\";\n\nexport default function Online({user}) {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n\n  return (\n    <li className=\"rightbarFriend\">\n      <div className=\"rightbarProfileImgContainer\">\n        <img className=\"rightbarProfileImg\" src={PF+user.profilePicture} alt=\"\" />\n        <span className=\"rightbarOnline\"></span>\n      </div>\n      <span className=\"rightbarUsername\">{user.username}</span>\n    </li>\n  );\n}\n","import \"./rightbar.css\";\nimport { Users } from \"../../dummyData\";\nimport Online from \"../online/Online\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Add, Remove } from \"@material-ui/icons\";\n\nexport default function Rightbar({ user }) {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  // lấy danh sách thông tin bạn bè \n  const [friends, setFriends] = useState([]);\n  // lấy thông tin user từ context \n  const { user: currentUser, dispatch } = useContext(AuthContext);\n  const [followed, setFollowed] = useState(\n    currentUser.followings.includes(user?.id)\n  );\n  \n  // lấy danh sách bạn bè \n  useEffect(() => {\n    const getFriends = async () => {\n      try {\n        const friendList = await axios.get(\"/users/friends/\" + user._id);\n        setFriends(friendList.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getFriends();\n  }, [user]);\n  \n  const handleClick = async () => {\n    try {\n      if (followed) {\n        await axios.put(`/users/${user._id}/unfollow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"UNFOLLOW\", payload: user._id });\n      } else {\n        await axios.put(`/users/${user._id}/follow`, {\n          userId: currentUser._id,\n        });\n        dispatch({ type: \"FOLLOW\", payload: user._id });\n      }\n      setFollowed(!followed);\n    } catch (err) {\n    }\n  };\n\n  const HomeRightbar = () => {\n    return (\n      <>\n        <div className=\"birthdayContainer\">\n          <img className=\"birthdayImg\" src=\"assets/gift.png\" alt=\"\" />\n          <span className=\"birthdayText\">\n            <b>Pola Foster</b> and <b>3 other friends</b> have a birhday today.\n          </span>\n        </div>\n        <img className=\"rightbarAd\" src=\"assets/ad.png\" alt=\"\" />\n        <h4 className=\"rightbarTitle\">Online Friends</h4>\n        <ul className=\"rightbarFriendList\">\n          {Users.map((u) => (\n            <Online key={u.id} user={u} />\n          ))}\n        </ul>\n      </>\n    );\n  };\n\n  // thông tin của từng người bạn \n  const ProfileRightbar = () => {\n    return (\n      <>\n        {user.username !== currentUser.username && (\n          <button className=\"rightbarFollowButton\" onClick={handleClick}>\n            {followed ? \"Unfollow\" : \"Follow\"}\n            {followed ? <Remove /> : <Add />}\n          </button>\n        )}\n        <h4 className=\"rightbarTitle\">User information</h4>\n        <div className=\"rightbarInfo\">\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">City:</span>\n            <span className=\"rightbarInfoValue\">{user.city}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">From:</span>\n            <span className=\"rightbarInfoValue\">{user.from}</span>\n          </div>\n          <div className=\"rightbarInfoItem\">\n            <span className=\"rightbarInfoKey\">Relationship:</span>\n            <span className=\"rightbarInfoValue\">\n              {user.relationship === 1\n                ? \"Single\"\n                : user.relationship === 1\n                ? \"Married\"\n                : \"-\"}\n            </span>\n          </div>\n        </div>\n        <h4 className=\"rightbarTitle\">User friends</h4>\n        <div className=\"rightbarFollowings\">\n          {friends.map((friend) => (\n            <Link\n              to={\"/profile/\" + friend.username}\n              style={{ textDecoration: \"none\" }}\n            >\n              <div className=\"rightbarFollowing\">\n                <img\n                  src={\n                    friend.profilePicture\n                      ? PF + friend.profilePicture\n                      : PF + \"person/noAvatar.png\"\n                  }\n                  alt=\"\"\n                  className=\"rightbarFollowingImg\"\n                />\n                <span className=\"rightbarFollowingName\">{friend.username}</span>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </>\n    );\n  };\n  return (\n    <div className=\"rightbar\">\n      <div className=\"rightbarWrapper\">\n        {/*Hiển thị phụ thuộc vào thông tin user*/}\n        {user ? <ProfileRightbar /> : <HomeRightbar />}\n      </div>\n    </div>\n  );\n}\n","import Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Feed from \"../../components/feed/Feed\";\nimport Rightbar from \"../../components/rightbar/Rightbar\";\nimport \"./home.css\"\n\nexport default function Home() {\n  return (\n    <>\n      <Topbar />\n      <div className=\"homeContainer\">\n        <Sidebar />\n        <Feed/>\n        <Rightbar/>\n      </div>\n    </>\n  );\n}\n","import axios from \"axios\";\n\n// catch lỗi ở đây là dùng  để bắt lỗi khi trò chuyện cùng server \nexport const loginCall = async (userCredential, dispatch) => {\n  dispatch({ type: \"LOGIN_START\" });\n  try {\n    const res = await axios.post(\"/auth/login\", userCredential);\n    if(res.data.email!=undefined){\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data });\n    }\n    else{\n      alert(res.data);// in ra thông báo trả từ server\n      // sai thì không quan trọng payload\n      dispatch({ type: \"LOGIN_FAILURE\", payload:\"sai mật khẩu\" });\n    }\n  } catch (err) {\n    dispatch({ type: \"LOGIN_FAILURE\", payload: err });\n  }\n};\n","import { useContext, useRef } from \"react\"\nimport \"./login.css\"\nimport { loginCall } from \"../../apiCalls\"\nimport { AuthContext } from \"../../context/AuthContext\"\nimport { CircularProgress } from \"@material-ui/core\"\nimport { useHistory } from \"react-router\"\nimport {Link} from 'react-router-dom'\nimport axios from \"axios\"\nexport default function Login() {\n  const email = useRef();  // khai báo là biến toàn cục bên ngoiaf khi re- render thì không bọ báo lại undefined \n  const password = useRef();\n  const history = useHistory();// chuyển trang\n\n  // lấy dữ liệu từ context\n  const { isFetching, dispatch } = useContext(AuthContext); // lấy dữ liệu từ authcontext \n  // dùng cách khác để dispatch thôi \n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    \n  \n    // dispatch action , trong thằng call api nó vừa dispatch action; vừa call api \n    loginCall(\n      { email: email.current.value, password: password.current.value },\n      dispatch\n    );\n    // thằng chuyển trang cũ dựa vào state mà bây giờ mình muốn verify lại thằng state nên làm lại đoạn login này \n    // Thằng state global chỉ set lại giá trị mà nó thay đổi thôi, không set lại toàn chương trình nên lệnh call api để chuyển trang sau đây vẫn có hiệu quả \n    // hiện taij chấp nhận việc phải call api 2 lần để tránh phụ thuộc vào state và khắc phục nguy cơ sự cố bên localStorage \n    const res = await axios.post(\"/auth/login\",  { email: email.current.value, password: password.current.value }); // call api \n    if(res.data.email!=undefined)\n    {\n      history.push(\"/\");\n    }\n    else{\n      history.push(\"/login\");\n    }\n    \n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"loginWrapper\">\n        <div className=\"loginLeft\">\n          <h3 className=\"loginLogo\">Lamasocial</h3>\n          <span className=\"loginDesc\">\n            Connect with friends and the world around you on Lamasocial.\n          </span>\n        </div>\n        <div className=\"loginRight\">\n          <form className=\"loginBox\" onSubmit={handleClick}>\n            <input\n              placeholder=\"Email\"\n              type=\"email\"\n              required\n              className=\"loginInput\"\n              ref={email}\n            />\n            <input\n              placeholder=\"Password\"\n              type=\"password\"\n              required\n              minLength=\"6\"\n              className=\"loginInput\"\n              ref={password}\n            />\n            <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>\n              {isFetching ? (\n                <CircularProgress color=\"white\" size=\"20px\" />\n              ) : (\n                \"Log In\"\n              )}\n            </button>\n            <span className=\"loginForgot\">Forgot Password?</span>\n            <Link  to=\"/register\">\n                <button style={{margin:'0 20%'}} className=\"loginRegisterButton\">\n                  {isFetching ? (\n                    <CircularProgress color=\"white\" size=\"20px\" />\n                  ) : (\n                    \"Create a New Account\"\n                  )}\n                </button>\n            </Link>\n            \n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./profile.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport Feed from \"../../components/feed/Feed\";\nimport Rightbar from \"../../components/rightbar/Rightbar\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router\";\n\nexport default function Profile() {\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\n  const [user, setUser] = useState({});\n  const username = useParams().username;\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const res = await axios.get(`/users?username=${username}`);\n      setUser(res.data);\n    };\n    fetchUser();\n  }, [username]);\n\n  return (\n    <>\n      <Topbar />\n      <div className=\"profile\">\n        <Sidebar />\n        <div className=\"profileRight\">\n          <div className=\"profileRightTop\">\n            <div className=\"profileCover\">\n              <img\n                className=\"profileCoverImg\"\n                src={\n                  user.coverPicture\n                    ? PF + user.coverPicture\n                    : PF + \"person/noCover.png\"\n                }\n                alt=\"\"\n              />\n              <img\n                className=\"profileUserImg\"\n                src={\n                  user.profilePicture\n                    ? PF + user.profilePicture\n                    : PF + \"person/noAvatar.png\"\n                }\n                alt=\"\"\n              />\n            </div>\n            <div className=\"profileInfo\">\n              <h4 className=\"profileInfoName\">{user.username}</h4>\n              <span className=\"profileInfoDesc\">{user.desc}</span>\n            </div>\n          </div>\n          <div className=\"profileRightBottom\">\n            <Feed username={username} />\n            <Rightbar user={user} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport { useRef } from \"react\";\nimport \"./register.css\";\nimport { useHistory } from \"react-router\";\nimport {Link} from 'react-router-dom'\nexport default function Register() {\n  const username = useRef();\n  const email = useRef();\n  const password = useRef();\n  const passwordAgain = useRef();\n  const history = useHistory();// chuyển trang\n\n  const handleClick = async (e) => {\n    e.preventDefault(); // ngăn không reload trang \n    if (passwordAgain.current.value !== password.current.value) {\n      passwordAgain.current.setCustomValidity(\"Passwords don't match!\"); // nếu mật khẩu nhắc lại không trùng với mật khẩu cũ thì xuất cánh báo trên UI \n    } else {\n      // nếu ok thì tạo ra ob \n      const user = {\n        username: username.current.value,\n        email: email.current.value,\n        password: password.current.value,\n      };\n      try {\n        const res=await axios.post(\"/auth/register\", user); // call api \n        alert(res.data);\n        history.push(\"/login\");\n      } catch (err){\n        alert(err);  // có lỗi thì ngừng rôid trả ra lỗi \n      }\n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"loginWrapper\">\n        <div className=\"loginLeft\">\n          <h3 className=\"loginLogo\">Lamasocial</h3>\n          <span className=\"loginDesc\">\n            Connect with friends and the world around you on Lamasocial.\n          </span>\n        </div>\n        <div className=\"loginRight\">\n          {/*Lăng nghe sự kiện submit*/}\n          <form className=\"loginBox\" onSubmit={handleClick}>\n            <input\n              placeholder=\"Username\"\n              required\n              ref={username}\n              className=\"loginInput\"\n            />\n            <input\n              placeholder=\"Email\"\n              required\n              ref={email}\n              className=\"loginInput\"\n              type=\"email\"\n            />\n            <input\n              placeholder=\"Password\"\n              required\n              ref={password}\n              className=\"loginInput\"\n              type=\"password\"\n              minLength=\"6\"\n            />\n            <input\n              placeholder=\"Password Again\"\n              required\n              ref={passwordAgain} //tên biến \n              className=\"loginInput\"\n              type=\"password\"\n            />\n            <button className=\"loginButton\" type=\"submit\">\n              Sign Up\n            </button>\n            <Link  to=\"/login\">\n                <button style={{margin:'0 20%'}} className=\"loginRegisterButton\">Log in Account</button>\n            </Link>\n           \n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./conversation.css\";\r\n\r\nexport default function Conversation({ conversation, currentUser,convSearch }) {\r\n  const [user, setUser] = useState(null); // user cục bộ \r\n  // ở dưới để dấu chấm hỏi để có thể có hoặc không có trường đối với 1 object => chống null lúc đầu\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n   \r\n  // lấy thông tin thằng user còn lại trong đoạn chat \r\n  useEffect(() => {\r\n    const friendId = conversation.members.find((m) => m !== currentUser._id);\r\n\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios(\"/users?userId=\" + friendId);\r\n        setUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [currentUser, conversation]);\r\n  // lấy xong thông tin về thằng conf lại thì tiến hành hiển thị \r\n  return (\r\n    <div className=\"conversation\">\r\n      {/*Đường link ảnh truy cập lên server*/}\r\n      {/*set chuyển màu*/}\r\n      {\r\n        (user?.username.includes(convSearch))?(\r\n          <div>\r\n            <img\r\n              className=\"conversationImg\"\r\n              src={\r\n                user?.profilePicture\r\n                  ? PF + user.profilePicture\r\n                  : PF + \"person/noAvatar.png\"\r\n              }\r\n              alt=\"\"\r\n            />\r\n            <span style={(conversation.status)?{color:'red'}:{}} className=\"conversationName\">{user?.username}</span>\r\n          </div>\r\n        ):(\r\n          <span></span>\r\n        )\r\n      }\r\n      </div>\r\n  );\r\n}","import \"./message.css\";\r\nimport { format } from \"timeago.js\";  // config thời gian cho tin nhắn \r\n\r\n\r\n// truyền vào tin nhắn và thông tin sở hữu của tin nhắn là bạn hay hay người nói chuyện với bạn \r\n// true false và được css \r\n// chỉ cần click vào 1 thằng thì sẽ hiện ra thông tin chat của mình với 1 đối tượng, đơn giản vậy thôi \r\nexport default function Message({ message, own }) {\r\n  return (\r\n    <div className={own ? \"message own\" : \"message\"}>\r\n      <div className=\"messageTop\">\r\n        <img\r\n          className=\"messageImg\"\r\n          src=\"http://localhost:8800/images/person/noAvatar.png\"\r\n          alt=\"\"\r\n        />{/*Hình anh mặc định*/}\r\n        <p className=\"messageText\">{message.text}</p>\r\n      </div>\r\n      <div className=\"messageBottom\">{format(message.createdAt)}</div>\r\n    </div>\r\n  );\r\n}","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./chatOnline.css\"\r\n\r\n// thằng này nó sẽ hiện ra danh sách bạn bè đang online của bạn và nếu bạn click vào \r\n// thì có thể trò chuyện với họ \r\n\r\nexport default function ChatOnline({userInfor,currentUser}) {\r\n    const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n    \r\n    const [userDetail,setUserDetail]=useState({username:\"\"})  // tránh trường hợp an null => Truyền vào user name rỗng\r\n    useEffect(() => {  // lấy ra danh sách message khi current chat thay đổi\r\n      const getuser = async () => {\r\n        try {\r\n          const res = await axios.get(\"/users/getuser/\" + userInfor.userId);  // current chat có thể rỗng vì ban đầu có thể chưa chọn \r\n          \r\n          setUserDetail(res.data[0])\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getuser();\r\n    }, []);\r\n   \r\n    //logic cần nằm trong thẻ dom \r\n    return (\r\n      <div>\r\n          {(userInfor.userId==currentUser._id) ? (\r\n              <div>\r\n              </div>\r\n          ) : (\r\n            <div className=\"chatOnline\">\r\n        \r\n                  <div className=\"chatOnlineFriend\" >\r\n                    <div className=\"chatOnlineImgContainer\">\r\n                    <img\r\n                        className=\"conversationImg\"\r\n                        src={\r\n                          userInfor?.profilePicture\r\n                            ? PF + userInfor.profilePicture\r\n                            : PF + \"person/noAvatar.png\"\r\n                        }\r\n                        alt=\"\"\r\n                      />\r\n                      <div className=\"chatOnlineBadge\"></div>\r\n                    </div>\r\n                    <span className=\"chatOnlineName\">{userDetail.username}</span>\r\n                  </div>\r\n          </div>\r\n\r\n          )}\r\n      </div>\r\n     \r\n\r\n\r\n     \r\n    );\r\n  }","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\"// để lấy dữ liệu user \r\nimport Topbar from \"../../components/topbar/Topbar\"\r\nimport Conversation from \"../../components/conversations/Conversation\"\r\nimport Message from \"../../components/message/Message\" // config các tin nhắn \r\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\" // danh sách những ông đang online\r\nimport \"./messenger.css\"\r\nimport axios from \"axios\"\r\nimport { io } from \"socket.io-client\"   // import server \r\n// lưu ý hoạt động của set State trong re-render FE \r\n// không set lại giá trị khởi tạo \r\n// tránh những useEffect có điều kiện hoặc reference \r\n// việc re-render lại 1 ob không ảnh hưởng đến 1 object khác đã set \r\n\r\n\r\nexport default function Messenger(){\r\n\r\n    // phân quyền hiển thị user \r\n    // nếu là host thì hiển thị toàn bộ danh sách online \r\n    // nếu không là host thì chỉ hiển thị host mà thôi \r\n    let hostId=useRef(); \r\n    hostId='62c46ce6951a21183c402403';\r\n    const [socketHost, setSocketHost] = useState({userId: '62c46ce6951a21183c402403', socketId: ''});  // lấy cả ra địa chỉ của socketHost để khi user click vào thì hiển thị luôn conversation đc tạo \r\n    // vậy câu hỏi đặt ra nếu add không online thì user click bằng cái gì \r\n\r\n\r\n    const { user } = useContext(AuthContext);  // lấy dữ liệu tài khoản \r\n    const [conversations, setConversations] = useState([]);  // conversationid biểu thị cho cuộc trò chuyện giũa hai người \r\n    // thằng này chứa 1 mảng gôm các id của conversation \r\n    const [currentChat, setCurrentChat] = useState(null); // set trạng thái chat,\r\n    // lấy dữ liệu các cuộc trò chuyện trong db \r\n    const [messages, setMessages] = useState([]); // lấy danh sách các tin nhắn \r\n\r\n    const [newMessage, setNewMessage] = useState(\"\") // nhập tin nhắn mới \r\n   \r\n    const scrollRef = useRef(); // config cho tin nhắn mới sẽ hiện xuống dưới \r\n    // thằng cuộn này hoạt động khi ta có thêm tin nhắn; mảng tin nhắn thay đổi \r\n    // thằng này set ở mỗi tin nhắn \r\n   \r\n    const [chatUsers, setChatUsers] = useState([]);  // lấy danh sách user\r\n    \r\n\r\n    // chộp tin nhắn vừa được gửi sau đó thêm vào list mesage ban đầu rồi render ra \r\n    // cách bình thường là phỉa reload page hoặc chỉ thấy tin nhắn của mình \r\n    const [arrivalMessage, setArrivalMessage] = useState(null);// lấy thông tin của tin nhắn vừa gửi \r\n    const [arrivalConversation, setArrivalConversation] = useState(null);\r\n\r\n    const[searchCon,setSearchCon]=useState('')\r\n    const socket = useRef(); // để tránh việc thay đổi socket id trong 1 phiên làm việc \r\n    \r\n    // luôn lắng nghe 1 lần khi reload page \r\n    // sẽ hoạt động đếu bắt được tín hiệu từ server\r\n    //https://socket-mes.herokuapp.com/\r\n    useEffect(() => {  // lắng nghe tin nhắn được gửi tới socketid của nó từ server\r\n      socket.current = io(\"https://socket-mes.herokuapp.com\"); // dùng ig... là kết nối rối \r\n      // trên thằng server cũng nhận được 1 object socket\r\n      socket.current.on(\"getMessage\", (data) => {\r\n        setArrivalMessage({\r\n          sender: data.senderId,\r\n          text: data.text,\r\n          createdAt: Date.now(),\r\n        });\r\n      });\r\n      // lắng nghe liên tục bất chấp hook\r\n      socket.current.on(\"getConversation\", (data) => {\r\n        setArrivalConversation({\r\n          members:data.members,\r\n          status:true,\r\n          createdAt: Date.now(),\r\n        });\r\n      });\r\n    }, []);\r\n\r\n\r\n     // hàm sắp xếp conv \r\n    const sortCoversation =  ()=>{\r\n      let new_conv_a=conversations;\r\n      let new_conv2=[];\r\n      let new_conv3=[];\r\n      for(let i=0;i<new_conv_a.length;i++){\r\n        if(new_conv_a[i].status){\r\n          new_conv2.push(new_conv_a[i])\r\n        }\r\n        else if(!new_conv_a[i].status){\r\n          new_conv3.push(new_conv_a[i])\r\n        }\r\n      }\r\n      for(let i=0;i<new_conv3.length;i++){\r\n        new_conv2.push(new_conv3[i])\r\n      }\r\n      return(new_conv2);\r\n    }\r\n\r\n\r\n    // thêm mesage ,conv\r\n    // thằng useEffect này khi chương trình bật nó sẽ chạy ít nhất 1 lần \r\n    // các tác vụ thực hiện nên đưa vào luông khi có dư liệu arrival\r\n    useEffect(() => {\r\n      // logic code: nếu arrivalMessage khác null( chỉ xét khi nó có sự thay đổi giá trị)\r\n      // và trong thằng currenChat check được có tồn tại id sender của arrival thì nó thêm vào danh sách mesage và render lại \r\n      arrivalMessage &&\r\n        currentChat?.members.includes(arrivalMessage.sender) &&\r\n        setMessages((prev) => [...prev, arrivalMessage]);\r\n      \r\n      \r\n      if(arrivalMessage){ \r\n        let new_conv=[];\r\n        conversations.map((mem)=>{\r\n          if(mem.members.includes(arrivalMessage.sender)){\r\n            mem.status=true;\r\n          }\r\n          new_conv.push(mem)\r\n        })\r\n        // có thời gian viết lại hàm sắp xếp\r\n        let new_conv2=[]; //mới đến mặc định true\r\n        let new_conv3=[];\r\n        for(let i=0;i<new_conv.length;i++){\r\n          if(new_conv[i].status){\r\n            new_conv2.push(new_conv[i])\r\n\r\n          }\r\n          else if(!new_conv[i].status){\r\n            new_conv3.push(new_conv[i])\r\n          }\r\n        }\r\n        for(let i=0;i<new_conv3.length;i++){\r\n          new_conv2.push(new_conv3[i])\r\n        }\r\n        setConversations(new_conv2);\r\n      }\r\n      \r\n       \r\n\r\n      if(arrivalConversation){\r\n        if(arrivalConversation.members.includes(user._id)){\r\n          let new_conv_a=conversations;\r\n          let new_conv2=[arrivalConversation]; //mới đến mặc định true\r\n          let new_conv3=[];\r\n          for(let i=0;i<new_conv_a.length;i++){\r\n            if(new_conv_a[i].status){\r\n              new_conv2.push(new_conv_a[i])\r\n\r\n            }\r\n            else if(!new_conv_a[i].status){\r\n              new_conv3.push(new_conv_a[i])\r\n            }\r\n          }\r\n          for(let i=0;i<new_conv3.length;i++){\r\n            new_conv2.push(new_conv3[i])\r\n          }\r\n          setConversations(new_conv2);\r\n        }\r\n      }\r\n    }, [arrivalConversation,arrivalMessage, currentChat]);\r\n    \r\n   \r\n\r\n\r\n    // chạy 1 lần cho đến khi user thay đổi \r\n    // cập nhật thông tin user đăng nhập và lấy danh sách user online \r\n    // reference user chỉ có tác dụng tạo kết nối; còn thằng socket sẽ liên tục lắng nghe và cập nhật ngay khi có thay đổi \r\n    useEffect(() => {\r\n      socket.current.emit(\"addUser\", user._id); // cập nhật idUser lên server socket \r\n      socket.current.on(\"getUsers\", (users) => { // thằng web socket trả về những user đang kết nối với web socket server \r\n        setChatUsers(users); // set những User có thể tham gia chat \r\n      });\r\n    }, [user]);\r\n \r\n    // láy thông tin conversatio \r\n    useEffect(() => {\r\n      const getConversations = async () => {\r\n        try {\r\n          const res = await axios.get(\"/conversations/\" + user._id);\r\n          // sắp xếp\r\n          let new_conv_a=res.data;\r\n          let new_conv2=[];\r\n          let new_conv3=[];\r\n          for(let i=0;i<new_conv_a.length;i++){\r\n            if(new_conv_a[i].status){\r\n              new_conv2.push(new_conv_a[i])\r\n            }\r\n            else if(!new_conv_a[i].status){\r\n              new_conv3.push(new_conv_a[i])\r\n            }\r\n          }\r\n          for(let i=0;i<new_conv3.length;i++){\r\n            new_conv2.push(new_conv3[i])\r\n          }\r\n          \r\n          setConversations(new_conv2);\r\n           \r\n         \r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getConversations();\r\n    }, [user._id]);\r\n    \r\n    // currentChat = conversation được chọn => CurrentChat.id= conversaton._id \r\n    // Trong thằng messenger có lưu 1 trường là id conversation \r\n    useEffect(() => {  // lấy ra danh sách message khi current chat thay đổi\r\n      const getMessages = async () => {\r\n        try {\r\n          const res = await axios.get(\"/messages/\" + currentChat?._id);  // current chat có thể rỗng vì ban đầu có thể chưa chọn \r\n          setMessages(res.data);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      getMessages();\r\n    }, [currentChat]);\r\n    \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      // current \r\n      const message = {\r\n        // thu thập dữ liệu \r\n        sender: user._id,\r\n        text: newMessage,  // set liên tục ; vừa gõ vừa re-render FE \r\n        conversationId: currentChat._id,// thu thập dữ liệu \r\n      };\r\n      // current chat lưu 1 mảng gômg id của user và id của người tham gia chat \r\n      const receiverId = currentChat.members.find(\r\n        (member) => member !== user._id\r\n      );\r\n      \r\n      // bắn đoạn tin lên web socket \r\n      // quan trọng là thằng socket này đã mang id\r\n      socket.current.emit(\"sendMessage\", {\r\n        senderId: user._id,\r\n        receiverId,\r\n        text: newMessage,\r\n      });\r\n\r\n      try {\r\n        // cập nhật dữ liệu trong db về conv nhận đc tin nhắn \r\n        const res_conv = await axios.post(\"/conversations/update\", {id:currentChat._id,status:true});  // call api gửi tin nhắn vào db \r\n \r\n        const res = await axios.post(\"/messages\", message);  // call api gửi tin nhắn vào db \r\n        // trả về message vừa nhập \r\n        // sau đó set bổ sung vào mảng \r\n        setMessages([...messages, res.data]);  // set lại danh sách tin nhắn => re-render -FE \r\n        setNewMessage(\"\");   // set lại tin nhắn \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n   \r\n\r\n    // khi xem conv\r\n    const handleSeeCoversation = async (c)=>{\r\n      setCurrentChat(c); // re-render \r\n      \r\n      let index = conversations.findIndex((val) => val === c);\r\n      let new_conv=conversations;\r\n      new_conv[index].status= false;\r\n\r\n      const sort_conv=sortCoversation()\r\n      setConversations(sort_conv);\r\n      const res = await axios.post(\"/conversations/update\", {id:c._id,status:false});  // call api gửi tin nhắn vào db \r\n    }\r\n   \r\n    // tạo conversation\r\n    const handleCreateCoversation = async (receiver)=>{\r\n      var a=0;\r\n      try {\r\n         // console.log(conversations)\r\n         for(var i=0;i<conversations.length;i++){\r\n           if(conversations[i].members.includes(receiver)){\r\n            a=a+1;\r\n           }\r\n         }\r\n         if(a>0){\r\n          alert(\"Đã có cov không call api\")\r\n         }\r\n         else{\r\n          // thông báo lên web soket \r\n          socket.current.emit(\"CreateConversation\", {\r\n            senderId: user._id,  // gửi lên dữ liệu sender \r\n            receiver\r\n           \r\n          });\r\n\r\n          const res = await axios.post(\"/conversations\", {senderId:user._id,receiverId:receiver});  // call api gửi tin nhắn vào db \r\n          // trả về message vừa nhập \r\n          // sau đó set bổ sung vào mảng \r\n          setConversations([...conversations, res.data]);  // set lại danh sách tin nhắn => re-render -FE \r\n          }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });// đoạn code để trượt xuống khi có tin nhắn mới \r\n    }, [messages]);\r\n    return (\r\n        <div>\r\n              <Topbar />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\"onChange={e=>setSearchCon(e.target.value)}   />\r\n              {/*click thì set thông tin currentchat theo thông tin của conversation*/}\r\n              \r\n                {conversations.map((c) => (\r\n                  <div onClick={() =>handleSeeCoversation(c)}>\r\n                    {/*nếu c là true thì cho là đỏ( chưa đọc còn nếu là false thì màu đen*/}\r\n                    <Conversation  conversation={c} currentUser={user} convSearch={searchCon} />\r\n                    \r\n                  </div>\r\n                ))}\r\n              \r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n          {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m) => (\r\n                    <div ref={scrollRef}>\r\n                      {/*chỉnh giá trị own dựa vào cách so sánh người gửi tin nhắn với id của người đăng nhập*/}\r\n                      <Message message={m} own={m.sender === user._id} />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"write something...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                  ></textarea>\r\n                  <button className=\"chatSubmitButton\" onClick={handleSubmit}>\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat.\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatOnline\">\r\n             {(user._id==hostId)?\r\n                (\r\n                    <div className=\"chatOnlineWrapper\">\r\n                      {chatUsers.map((m) => (\r\n                            <div onClick={() => handleCreateCoversation(m.userId)}>\r\n                              {/*chỉnh giá trị own dựa vào cách so sánh người gửi tin nhắn với id của người đăng nhập*/}\r\n                              {/*Bây giờ sẽ truyền vào mảng gồm userId và socketID*/}\r\n                              <ChatOnline \r\n                                userInfor={m} \r\n                                currentUser={user}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ):(\r\n                    <div className=\"chatOnlineWrapper\">\r\n                      {/*Vế user mặc định để host dù có on hay không\r\n                        Giờ tạo ra socket để khi click vào tạo conversation thì bên còn lại cũng nhận được\r\n                        => Làm giống cơ chết gửi tin nhắn và re-render tin nhắn\r\n                      */}\r\n                      <div onClick={() => handleCreateCoversation(socketHost.userId)}>\r\n                              {/*chỉnh giá trị own dựa vào cách so sánh người gửi tin nhắn với id của người đăng nhập*/}\r\n                              {/*Bây giờ sẽ truyền vào mảng gồm userId và socketID*/}\r\n                              <ChatOnline \r\n                                userInfor={socketHost} \r\n                                currentUser={user}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                  )\r\n              }\r\n        </div>\r\n      </div>\r\n        </div>\r\n    )\r\n}","import Home from \"./pages/home/Home\";\nimport Login from \"./pages/login/Login\";\nimport Profile from \"./pages/profile/Profile\";\nimport Register from \"./pages/register/Register\";\nimport Messenger from \"./pages/messenger/Messenger\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext} from \"./context/AuthContext\";\n\nfunction App() {\n  // trong authContext chứa dữ liệu người dùng lấy từ localStorage \n  const { user } = useContext(AuthContext);  // lấy dữ liệu từ context \n  return (\n    <Router>\n      <Switch>\n        {/*Nếu user đúng thì trang ban đầu hiển thị component home không thì thi register*/}\n        <Route exact path=\"/\">\n          {user ? <Home /> : <Register />}\n        </Route>\n\n        {/*Thằng redirect này đã giải quyết được bài toán tự động chuyển trang */}\n        {/*Tất cả dựa vào 1 dữ liệu lưu vào local Storage }\n        {/*Vào trang Login , nếu user đã tồn tại thì vẫn redirect đến trang login vì để tránh xung đột local storage với các web site khác */}\n        <Route path=\"/login\"> <Login />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/messenger\">\n          {/*Nếu không có user thì chuyên đến trang chính; user lấy từ AuthContext*/}\n          {!user ? <Redirect to=\"/\" /> : <Messenger />}\n        </Route>\n        {/*Config route đi vào profile*/}\n        <Route path=\"/profile/:username\">\n          <Profile />\n        </Route>\n\n        {/*Ở đây chưa có phần config đi vào chat*/}\n       \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AuthContextProvider } from \"./context/AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}